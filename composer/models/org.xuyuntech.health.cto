/**
 * My commodity trading network
 */
namespace org.xuyuntech.health

// 医院评级
enum HospitalGrade {
  o ThirdSpecial // 三级特等
  o ThridA // 三级甲等，下面以此类推
  o ThridB
  o ThirdC
  o SecondA
  o SecondB
  o SecondC
  o FirstA
  o FirstB
  o FirstC
}

enum Gender {
  o UNKNOW
  o MALE
  o FEMALE
}

enum VisitTime {
  o AM
  o PM
}

participant Person identified by name {
  o String name // 用户名, 登录用，唯一
  o String realName optional // 真名
  o String phone optional
  o String sid optional
  o String email optional
  o String address optional
  o String birthday optional
  o String avatar optional
  o Gender gender optional
  o Integer age optional
}

participant OrgAdmin extends Person {
}

participant HospitalAdmin extends Person {
}


participant Patient extends Person {
  o Double points
  o Double totalSpend optional
}

participant Hospital identified by id {
  o String id
  o String name
  o HospitalGrade grade optional // 评级
  o Integer reservationQuantity optional // 预约量
  o String address optional
  o String phone1 optional // 座机区号
  o String phone2 optional // 座机号码 或 手机号
  o String zipCode optional // 邮编
  o String headImg optional // 头图
}

// Doctor 医师
participant Doctor extends Person {
  o String title // 职称
  o String description // 描述
  o String skilledIn // 擅长什么什么
}

participant Supplier identified by id {
  o String id
  o String name
  o String address
  o String zipCode
  o String telephone
  o String fax
  o String webSite
}

/* ==================  asset  ==================== */


asset Department1 identified by id {
  o String id
  o String name
  --> Hospital hospital
  --> Department2[] department2s optional
}

asset Department2 identified by id {
  o String id
  o String name
  --> Doctor[] doctors optional
}


asset Visitor identified by id {
  o String id
  o String realName
  o String sid
  o String phone optional
  o Gender gender optional
  o Integer age optional
  --> Patient creator
}

asset MedicalItem identified by id {
  o String id
  o String title // 药品名称
  o Double quantity // 库存(有可能是小数)
  o Double price // 价格
  o String barcode // 条码
  o String batchNumber // 批次号
  o String permissionNumber // 批准文号
  o DateTime productionDate // 生产日期
  o DateTime expiredDate // 过期日期
  --> Supplier supplier
}
//药品列表概念
concept MedicalListForm {
  --> MedicalItem medicalItem
  o Double count
}

enum RegisterState {
  o Register // 挂号
  o Visiting // 就诊中
  o Finished // 已开处方
}

enum RegisterType {
  o First // 初诊
  o Second // 复诊
}
// RegisterHistory 挂号记录
asset RegisterHistory identified by id {
  o String id
  o RegisterState state // 状态
  o String diseaseInfo // 疾病信息
  o RegisterType type // 初复诊
  o DateTime created // 创建时间
  o String visitorName optional
  o String patientName optional
  --> Visitor visitor // 就诊人
  --> Patient patient // 由哪位患者创建的
  --> ArrangementHistory arrangementHistory // 排班记录
}

// ArrangementHistory 排班
asset ArrangementHistory identified by id {
  o String id
  o String description optional
  o Double fee optional
  o DateTime visitDate // 出诊日期
  o VisitTime visitTime // 出诊时间(上午|下午)
  o String hospitalName optional
  o String doctorName optional
  --> Hospital hospital
  --> Doctor doctor
  --> Department1 department1
  --> Department2 department2
}

// Prescription 处方
asset Prescription identified by id {
  o String id // 处方编号
  o DateTime created // 创建时间
  o MedicalListForm[] medicallistform//药品列表
  // --> Doctor doctor // 医师
  // --> Patient patient // 患者
  // --> MedicalItem[] medicalItems  // 药品列表
  // o Double[] count
  --> RegisterHistory registerHistory // 挂号记录
  --> CaseItem caseItem // 病历
  // --> Patient patient // 创建人
}

// CaseItem 病历
asset CaseItem identified by id {
  o String id // 病例编号
  o String complained // 主诉
  o String diagnose // 临床诊断内容, 现病史
  o String history // 既往史
  o String familyHistory // 家族史
  o DateTime created
}

// PaymentHistory 支付记录
asset PaymentHistory identified by participantKey {
  o String participantKey
  o String number // 编号
  o Double spending // 总消费
  o DateTime created
  --> Order order
  --> Prescription prescription
  --> RegisterHistory registerHistory
  --> Patient patient
}

enum OrderState {
  o NotPaid
  o Paid
  o Finished
}

// OutboundHistory 出库记录
asset OutboundHistory identified by participantKey {
  o String participantKey
  o String number // 编号
  o DateTime outboundTime
  --> Order order
  --> Prescription prescription
  --> RegisterHistory registerHistory
  --> MedicalItem[] medicalItems
}

// Order 订单
asset Order identified by id {
  o String id // 订单编号
  o OrderState state
  o DateTime created
  o Double spending // 总金额

  --> OrderItem[] orderItem // 订单明细
  --> RegisterHistory registerHistory

  // --> Patient patient // 创建人
  // --> Prescription prescription
  // --> Patient patient
  // --> CaseItem caseItem
}

// 订单明细
asset OrderItem  identified by id {
  o String id
  o String number optional // 编号
  o MedicalItem medicalItem
  o Double count // 购买数量
  o Double spending // 消费金额
}



/* ================= transaction: 主流程 ===================== */

/*
  排班 (使用rest服务器生成的API，暂时不做开发)
*/
transaction Arrangement {
  --> Doctor doctor
  --> Hospital hospital
  o VisitTime visitTime
  o DateTime visitDate
}

/*
  挂号: 生成挂号单 (使用rest服务器生成的API，暂时不做开发)
    params: Patient, ArrangementHistory
*/
transaction RegisterAction {
  --> RegisterHistory registerHistory
}
// 核销挂号
transaction VerifyRegisterAction {
  --> RegisterHistory registerHistory
}
// 完成挂号单
transaction FinishRegisterAction {
  --> RegisterHistory registerHistory
  o String id
  o Double points
  o String complained // 主诉
  o String diagnose // 临床诊断内容, 现病史
  o String history // 既往史
  o String familyHistory // 家族史
  o DateTime created
  o MedicalListForm[] medicallistform

}

/*
  就诊: 更新挂号单状态 Register -> Visiting
    params: RegisterHistory
*/
transaction visiting {
  --> RegisterHistory registerHistory
}

/*
  开处方: 
  params: ArrangementHistory, complained, diagnose,  history, familyHistory, medicalItems 
  流程:
    1. 验证挂号单状态是否为 Visiting (暂时没找到可以返回错误的方法)（后续进行开发）(现阶段使用throw方法，后续继续完善)(测试成功)
    2. 验证药品列表 (没想好怎么验证，是使用查询进行验证)（后续进行开发）（暂未测试）
    3. 生成新的病例记录（完成，并且完成测试）
    4. 生成处方(medicalItems未实现)
    5. 生成订单以及订单明细
    6. 更新挂号单状态 Visiting -> Finished
*/
transaction Prescribe {
  // 验证挂号单状态是否为 Visiting
  --> RegisterHistory registerHistory
  //生成病历记录
  o String participantKey_CaseItem
  --> Doctor doctor
  --> Hospital hospital
  o String complained // 主诉
  o String diagnose // 临床诊断内容, 现病史
  o String history // 既往史
  o String familyHistory // 家族史
  o DateTime created
  //生成处方
  o String participantKey_Prescription
  --> MedicalItem[] medicalItems  // 药品列表
  o Double[] count
  //生成订单以及订单明细
  //订单明细
  o String participantKey_OrderItem
  o Double[] price // 单价
  //订单
  o String participantKey_Order
  o OrderState orderstate


  //更新挂号单状态
  
}

/*
  支付: 更新订单状态 NotPaid -> Paid ，生成支付记录
  params: Order
*/
transaction paid {
  o String participantKey_paid
  o String number // 编号
  o DateTime created
  --> Order order
  --> Prescription prescription
  --> RegisterHistory registerHistory
}

/*
  取药: 更新订单状态 Paid -> Finished, 生成出库记录
*/
transaction finish {
  o String participantKey_finish
  o String number // 编号
  o DateTime outboundTime
  --> Order order
  --> Prescription prescription
  --> RegisterHistory registerHistory
  --> MedicalItem[] medicalItems
}